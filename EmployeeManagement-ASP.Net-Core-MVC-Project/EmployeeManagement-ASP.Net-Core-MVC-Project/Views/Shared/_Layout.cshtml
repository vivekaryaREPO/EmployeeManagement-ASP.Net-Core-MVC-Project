@*
        *Layout view is not specific to a controller this is why we have placed it into shared
        folder.
       1. There can be multiple layout views in our app.
       2. Page specific view are substituted at @RenderBody() area.
       3. You can't hard code @ViewBag.Title in shared view, as diff views have diff title.
       4. to use this shared view, you can use razor code block in other views and set the layout
    property, and title property if you want.
    5. Layout view may contain sections, these sections help us make some things compulsory/optional
    depending upon the true/value we set for the 'required' property of @RenderSection(..)
    FALSE=>No need to include that element/reference on the other views.
    TRUE=>Always include that element/reference on the other views.

    *To check if the user is logged in or not, we are gonna make use of SignInManager 
    class.
    So our application navigation menu is in layout view, so this is where we need to inject
    signinmanager class.

*@

@inject SignInManager<IdentityUser> signInManager;


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    @*
                38
        The following 3 attributes and their associated values are used to check if the CDN is down
        asp-fallback-test-class="sr-only"
        asp-fallback-test-property="position"
        asp-fallback-test-value="absolute"
    *@
<environment include="Development">
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <script src="~/lib/jquery/jquery.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.js"></script>

</environment>

    <environment exclude="Development">
        <link rel="stylesheet"
              integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
              crossorigin="anonymous"
              href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position"
              asp-fallback-test-value="absolute"
              asp-suppress-fallback-integrity="true" />
    </environment>
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div class="container">
        <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
            <a class="navbar-brand" asp-controller="home" asp-action="index">
                <img src="~/images/employees.png" width="30" height="30">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="collapsibleNavbar">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="home" asp-action="index">List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="home" asp-action="create">Create</a>
                    </li>
                </ul>

                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="account" asp-action="register">
                            Register
                        </a>
                    </li>
                </ul>

            </div>
        </nav>

        <div>
            @RenderBody()
        </div>

        @if (IsSectionDefined("Scripts"))
        {
            @RenderSection("Scripts", required: false)
        }
    </div>
    @*or you can check if the particular section as such is declared on the non shared view, before it's rendered. if(){..} section as below:
        if(IsSectionDefined("scripts"))
        {
        @RenderSection("scripts", required: false) //so it'll be rendered if and only if element on @sections Scripts{} is defined on the non-shared view views
                                                  //which will get IsSectionDefined true.
                                                  //so render only if @sections Scripts{} is properly defined.
                                                  //@sections Scripts{} is rendered where @RenderSection is defined.
        }*@
</body>
</html>
